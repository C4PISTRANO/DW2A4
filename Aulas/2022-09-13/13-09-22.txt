BOAS PRÁTICAS DESENVOLVIMENTO WEB:

Case Style:
Camel Case -> variaveis e constatantes, Métodos e funções


Sintaxe expandida:
Separa os operadores, valores, etc.

Operador ternário:
Usar em uma linha única.

Sempre usar o let e const, não usar o var

Usar sempre os operadores estritos

Sempre utilizar o template string (` $ {} `), ao invés

Sempre utilizar chaves no if, para ficar claro.

Script sempre no final do HTML.

Declarar as variáveis fora dos comandos / funções.

Utilizar os métodos nativos.

Reduzir a quantidade de variáveis -> Criar objetos, com propriedades.

setInterval e setTimeOut -> sempre utilizar essa função.

sempre utilizar {} e [] para criar objetos e vetores

separar criação de variáveis com (,) declarando o tipo apenas uma vez.

LINT (fiapo) -> Checagem automática pra previnir e/ou
solucionar erros enquanto escrevemos códigos.
Linters JavaScript: ESLint, JSLint, JSHint e Lynt (node e npm)

Code smell (O que precisamos evitar):
	- Código muito grande (Bloaters)
	- Violação a orientação a objetos (Object-Orientation Abusers)
	- Inibidores de modificação (Change Preventers)
	    - Reescrever para tornar o código modular e de possível evolução
	- Código dispensável (Dispensables)
	    - Comentário excessivos
	- Acopladores (Couplers)
	    - Classes que dependem de outras classes
